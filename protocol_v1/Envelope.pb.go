// Code generated by protoc-gen-go.
// source: Envelope.proto
// DO NOT EDIT!

package protocol_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Envelope_MessageType int32

const (
	Envelope_Bool            Envelope_MessageType = 0
	Envelope_Bytes           Envelope_MessageType = 1
	Envelope_CallMember      Envelope_MessageType = 2
	Envelope_Close           Envelope_MessageType = 3
	Envelope_CreateObject    Envelope_MessageType = 4
	Envelope_DateTimeISO8601 Envelope_MessageType = 5
	Envelope_DeleteObject    Envelope_MessageType = 6
	Envelope_DescribeObject  Envelope_MessageType = 7
	Envelope_Error           Envelope_MessageType = 8
	Envelope_Float32         Envelope_MessageType = 9
	Envelope_Float64         Envelope_MessageType = 10
	Envelope_GetMember       Envelope_MessageType = 11
	Envelope_Handshake       Envelope_MessageType = 12
	Envelope_Int32           Envelope_MessageType = 13
	Envelope_Int64           Envelope_MessageType = 14
	Envelope_Keepalive       Envelope_MessageType = 15
	Envelope_SetMember       Envelope_MessageType = 16
	Envelope_StringASCII     Envelope_MessageType = 17
	Envelope_StringUTF16     Envelope_MessageType = 18
	Envelope_StringUTF16BE   Envelope_MessageType = 19
	Envelope_StringUTF16LE   Envelope_MessageType = 20
	Envelope_StringUTF32     Envelope_MessageType = 21
	Envelope_StringUTF32BE   Envelope_MessageType = 22
	Envelope_StringUTF32LE   Envelope_MessageType = 23
	Envelope_StringUTF8      Envelope_MessageType = 24
	Envelope_UInt32          Envelope_MessageType = 25
	Envelope_UInt64          Envelope_MessageType = 26
	Envelope_Void            Envelope_MessageType = 27
)

var Envelope_MessageType_name = map[int32]string{
	0:  "Bool",
	1:  "Bytes",
	2:  "CallMember",
	3:  "Close",
	4:  "CreateObject",
	5:  "DateTimeISO8601",
	6:  "DeleteObject",
	7:  "DescribeObject",
	8:  "Error",
	9:  "Float32",
	10: "Float64",
	11: "GetMember",
	12: "Handshake",
	13: "Int32",
	14: "Int64",
	15: "Keepalive",
	16: "SetMember",
	17: "StringASCII",
	18: "StringUTF16",
	19: "StringUTF16BE",
	20: "StringUTF16LE",
	21: "StringUTF32",
	22: "StringUTF32BE",
	23: "StringUTF32LE",
	24: "StringUTF8",
	25: "UInt32",
	26: "UInt64",
	27: "Void",
}
var Envelope_MessageType_value = map[string]int32{
	"Bool":            0,
	"Bytes":           1,
	"CallMember":      2,
	"Close":           3,
	"CreateObject":    4,
	"DateTimeISO8601": 5,
	"DeleteObject":    6,
	"DescribeObject":  7,
	"Error":           8,
	"Float32":         9,
	"Float64":         10,
	"GetMember":       11,
	"Handshake":       12,
	"Int32":           13,
	"Int64":           14,
	"Keepalive":       15,
	"SetMember":       16,
	"StringASCII":     17,
	"StringUTF16":     18,
	"StringUTF16BE":   19,
	"StringUTF16LE":   20,
	"StringUTF32":     21,
	"StringUTF32BE":   22,
	"StringUTF32LE":   23,
	"StringUTF8":      24,
	"UInt32":          25,
	"UInt64":          26,
	"Void":            27,
}

func (x Envelope_MessageType) String() string {
	return proto.EnumName(Envelope_MessageType_name, int32(x))
}
func (Envelope_MessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{0, 0} }

type Envelope struct {
	Type    Envelope_MessageType `protobuf:"varint,1,opt,name=Type,enum=protocol.v1.Envelope_MessageType" json:"Type,omitempty"`
	Context string               `protobuf:"bytes,2,opt,name=Context" json:"Context,omitempty"`
	Data    []byte               `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *Envelope) Reset()                    { *m = Envelope{} }
func (m *Envelope) String() string            { return proto.CompactTextString(m) }
func (*Envelope) ProtoMessage()               {}
func (*Envelope) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *Envelope) GetType() Envelope_MessageType {
	if m != nil {
		return m.Type
	}
	return Envelope_Bool
}

func (m *Envelope) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

func (m *Envelope) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Envelope)(nil), "protocol.v1.Envelope")
	proto.RegisterEnum("protocol.v1.Envelope_MessageType", Envelope_MessageType_name, Envelope_MessageType_value)
}

func init() { proto.RegisterFile("Envelope.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 390 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x92, 0xdb, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0x71, 0xe3, 0xe6, 0x30, 0x4e, 0x9c, 0xe9, 0x94, 0x83, 0x81, 0x9b, 0xd0, 0xab, 0x5c,
	0x45, 0xe4, 0x80, 0xd5, 0x5b, 0xe2, 0xb8, 0x10, 0xd1, 0xaa, 0x52, 0x92, 0x72, 0xbf, 0x4e, 0x47,
	0xc5, 0xb0, 0xf5, 0x5a, 0xeb, 0x55, 0x44, 0xdf, 0x87, 0x27, 0xe0, 0x09, 0xd1, 0x9a, 0xda, 0x4d,
	0x73, 0xb5, 0xf3, 0xff, 0xf3, 0xcd, 0xaf, 0x3d, 0x81, 0x1f, 0x67, 0x3b, 0x96, 0x2a, 0xe7, 0x51,
	0xae, 0x95, 0x51, 0xe4, 0x95, 0xcb, 0x56, 0xc9, 0xd1, 0x6e, 0x7c, 0xf6, 0xc7, 0x85, 0x76, 0xd5,
	0xa7, 0x4f, 0xe0, 0x6e, 0x1e, 0x72, 0x0e, 0x9c, 0x81, 0x33, 0xf4, 0x27, 0x1f, 0x46, 0x7b, 0xe0,
	0xa8, 0x0e, 0xb9, 0xe2, 0xa2, 0x10, 0x77, 0x6c, 0xc1, 0x55, 0x89, 0x53, 0x00, 0xad, 0x48, 0x65,
	0x86, 0x7f, 0x9b, 0xe0, 0x68, 0xe0, 0x0c, 0x3b, 0xab, 0x4a, 0x12, 0x81, 0xbb, 0x10, 0x46, 0x04,
	0x8d, 0x81, 0x33, 0xec, 0xae, 0xca, 0xfa, 0xec, 0x6f, 0x03, 0xbc, 0xbd, 0x0c, 0x6a, 0x83, 0x3b,
	0x57, 0x4a, 0xe2, 0x0b, 0xea, 0xc0, 0xf1, 0xfc, 0xc1, 0x70, 0x81, 0x0e, 0xf9, 0x00, 0x91, 0x90,
	0xf2, 0x8a, 0xef, 0x13, 0xd6, 0x78, 0x64, 0x5b, 0x91, 0x54, 0x05, 0x63, 0x83, 0x10, 0xba, 0x91,
	0x66, 0x61, 0xf8, 0x3a, 0xf9, 0xc9, 0x5b, 0x83, 0x2e, 0x9d, 0x42, 0x7f, 0x21, 0x0c, 0x6f, 0xd2,
	0x7b, 0x5e, 0xae, 0xaf, 0xcf, 0xc3, 0x8f, 0x63, 0x3c, 0xb6, 0xd8, 0x82, 0x25, 0xd7, 0x58, 0x93,
	0x08, 0xfc, 0x05, 0x17, 0x5b, 0x9d, 0x26, 0x95, 0xd7, 0xb2, 0xb9, 0xb1, 0xd6, 0x4a, 0x63, 0x9b,
	0x3c, 0x68, 0x5d, 0x48, 0x25, 0xcc, 0x74, 0x82, 0x9d, 0x5a, 0x84, 0x33, 0x04, 0xea, 0x41, 0xe7,
	0x0b, 0x9b, 0xc7, 0xbd, 0x78, 0x56, 0x7e, 0x15, 0xd9, 0x6d, 0xf1, 0x43, 0xfc, 0x62, 0xec, 0xda,
	0x88, 0x65, 0x66, 0xa7, 0x7a, 0x8f, 0x65, 0x38, 0x43, 0xdf, 0x42, 0xdf, 0x98, 0x73, 0x21, 0xd3,
	0x1d, 0x63, 0xdf, 0xca, 0x75, 0x1d, 0x81, 0xd4, 0x07, 0x6f, 0x6d, 0x74, 0x9a, 0xdd, 0x7d, 0x5e,
	0x47, 0xcb, 0x25, 0x9e, 0x3c, 0x19, 0x37, 0x9b, 0x8b, 0x71, 0x88, 0x44, 0x27, 0xd0, 0xdb, 0x33,
	0xe6, 0x31, 0x9e, 0x1e, 0x58, 0x97, 0x31, 0xbe, 0x7c, 0x36, 0x36, 0x9d, 0xe0, 0xab, 0x67, 0xcc,
	0x74, 0x32, 0x8f, 0xf1, 0xf5, 0x81, 0x75, 0x19, 0xe3, 0x1b, 0x7b, 0xbb, 0xb5, 0x75, 0x8e, 0x01,
	0x01, 0x34, 0x6f, 0xfe, 0x9f, 0xe1, 0x6d, 0x55, 0x87, 0x33, 0x7c, 0x67, 0x9f, 0xe6, 0xbb, 0x4a,
	0x6f, 0xf1, 0x7d, 0xd2, 0x2c, 0xbf, 0xc2, 0xf4, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xac, 0x55,
	0xaf, 0xe1, 0x4c, 0x02, 0x00, 0x00,
}
