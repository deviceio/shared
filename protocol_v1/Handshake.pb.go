// Code generated by protoc-gen-go.
// source: Handshake.proto
// DO NOT EDIT!

package protocol_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Handshake struct {
	AgentID      string   `protobuf:"bytes,1,opt,name=AgentID" json:"AgentID,omitempty"`
	Hostname     string   `protobuf:"bytes,2,opt,name=Hostname" json:"Hostname,omitempty"`
	Architecture string   `protobuf:"bytes,3,opt,name=Architecture" json:"Architecture,omitempty"`
	Platform     string   `protobuf:"bytes,4,opt,name=Platform" json:"Platform,omitempty"`
	Tags         []string `protobuf:"bytes,5,rep,name=Tags" json:"Tags,omitempty"`
}

func (m *Handshake) Reset()                    { *m = Handshake{} }
func (m *Handshake) String() string            { return proto.CompactTextString(m) }
func (*Handshake) ProtoMessage()               {}
func (*Handshake) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *Handshake) GetAgentID() string {
	if m != nil {
		return m.AgentID
	}
	return ""
}

func (m *Handshake) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *Handshake) GetArchitecture() string {
	if m != nil {
		return m.Architecture
	}
	return ""
}

func (m *Handshake) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *Handshake) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func init() {
	proto.RegisterType((*Handshake)(nil), "protocol.v1.Handshake")
}

func init() { proto.RegisterFile("Handshake.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 155 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0xf7, 0x48, 0xcc, 0x4b,
	0x29, 0xce, 0x48, 0xcc, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x06, 0x53, 0xc9,
	0xf9, 0x39, 0x7a, 0x65, 0x86, 0x4a, 0x53, 0x19, 0xb9, 0x38, 0xe1, 0x0a, 0x84, 0x24, 0xb8, 0xd8,
	0x1d, 0xd3, 0x53, 0xf3, 0x4a, 0x3c, 0x5d, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x60, 0x5c,
	0x21, 0x29, 0x2e, 0x0e, 0x8f, 0xfc, 0xe2, 0x92, 0xbc, 0xc4, 0xdc, 0x54, 0x09, 0x26, 0xb0, 0x14,
	0x9c, 0x2f, 0xa4, 0xc4, 0xc5, 0xe3, 0x58, 0x94, 0x9c, 0x91, 0x59, 0x92, 0x9a, 0x5c, 0x52, 0x5a,
	0x94, 0x2a, 0xc1, 0x0c, 0x96, 0x47, 0x11, 0x03, 0xe9, 0x0f, 0xc8, 0x49, 0x2c, 0x49, 0xcb, 0x2f,
	0xca, 0x95, 0x60, 0x81, 0xe8, 0x87, 0xf1, 0x85, 0x84, 0xb8, 0x58, 0x42, 0x12, 0xd3, 0x8b, 0x25,
	0x58, 0x15, 0x98, 0x35, 0x38, 0x83, 0xc0, 0xec, 0x24, 0x36, 0xb0, 0x23, 0x8d, 0x01, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x66, 0xb4, 0x3a, 0x37, 0xbe, 0x00, 0x00, 0x00,
}
